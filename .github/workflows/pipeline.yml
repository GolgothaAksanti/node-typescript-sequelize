name: pipeline

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]
    types: [opened, synchronize, reopened, edited]

jobs:
  Github-actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The Job is automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job now running on a ${{ runner.os }} server hosted by Github!"
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}"
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "The ${{ github.repository }} has been cloned to the runner."
      - run: echo "The workflow is now ready to test the code on the runner."
      - name: List files in the repository
        run: |
          ls ${{github.workspace}}
      - run: echo "This job's status is ${{ job.status }}. congrat ${{secrets.MY_NAME}}"

  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: ${{ secrets.DB_TEST_NAME }}
         # MYSQL_DATABASE: "test_db"
          MYSQL_USER: root
          #MYSQL_PASSWORD: golgotha
          #MYSQL_USER: ${{ secrets.DB_TEST_USER }}
          #MYSQL_USER: my_user
          #MYSQL_PASSWORD: ${{ secrets.DB_TEST_PASSWORD }}
          #MYSQL_ROOT_PASSWORD: ${{ secrets.DB_TEST_PASSWORD }}
          MYSQL_ROOT_PASSWORD: "golgotha"
          options: >- 
            --name=mysql
            --health-cmd="mysqladmin ping --silent" 
            --health-interval=10s 
            --health-timeout=5s 
            --health-retries=3

    steps:
      - name: checkout repository
        uses: actions/checkout@v3
      # - name: Shutdown Ubuntu MySQL (SUDO)
        # run: sudo service mysql stop

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      # - name: Set up MySQL 5.7
      #   uses: mirromutth/mysql-action@master
      #   with:
      #     mysql version: 5.7
      #     # mysql database: ${{ secrets.DB_TEST_NAME }}
      #     mysql database: test_db
      #     mysql root password: golgotha
      #     # mysql root password: ${{ secrets.DB_TEST_PASSWORD }}

      - name: setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: pnpm install
        run: pnpm install

      # - name: Wait for MySQL
      #   run: |
      #     while ! mysqladmin ping -h"127.0.0.1" --silent; do
      #       echo "Waiting for MySQL..."
      #       sleep 1
      #     done

      # - name: db drop
      #   run: pnpm db:drop:test
        # env:
        #   DBURL: 'localhost:3306'
        #   JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        #   PORT: ${{ secrets.PORT }}
        #   DB_TEST_NAME: ${{ secrets.DB_TEST_NAME }}
        #   DB_TEST_USER: ${{ secrets.DB_TEST_USER }}
        #   DB_TEST_PASSWORD: ${{ secrets.DB_TEST_PASSWORD }}
        #   DB_TEST_HOST: ${{ secrets.DB_TEST_HOST }}

      # - name: db create
      #   run: pnpm db:create:test

      - name: run migrate
        run: pnpm db:migrate:test

      - name: run test
        run: pnpm test -- --password="golgotha"
        env:
          DBURL: "localhost:3306"
          NODE_ENV: test
          CI: true
          JWT_SECRET_KEY: "jwt_tokenf[cmsdlnsvljsvlksdjvlkdvs;dsce3ir902r982rir]"
          PORT: 4001
          DB_TEST_NAME: "test_db"
          DB_TEST_USER: "root"
          DB_TEST_PASSWORD: "golgotha"
          DB_TEST_HOST: "localhost"
          DB_HOST: "localhost" 
          DB_USER: "root" 
          DB_PASSWORD: "golgotha"
          DB_NAME: "dev_db"
          DB_PORT: 3306

          # JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          # PORT: ${{ secrets.PORT }}
          # DB_TEST_NAME: ${{ secrets.DB_TEST_NAME }}
          # DB_TEST_USER: ${{ secrets.DB_TEST_USER }}
          # DB_TEST_PASSWORD: ${{ secrets.DB_TEST_PASSWORD }}
          # DB_TEST_HOST: ${{ secrets.DB_TEST_HOST }}
